import pandas as pd
from sklearn.linear_model import LinearRegression

# 读取数据
data = {
    '年份': [2015, 2016, 2017, 2018, 2019, 2020, 2021],
    '常住人口 (万人)': [468.0, 482.2, 483.5, 490.8, 492.8, 485.83, 487.4],
    '城镇化率%': [32.44, 33.04, 34.3, 35.71, 37.13, 36.96, 38.65],
    '城镇人口': [151.8192, 159.31888, 165.8405, 175.26468, 182.97664, 179.5575, 188.4],
    '乡村人口': [316.1808, 322.88112, 317.6595, 315.53532, 309.82336, 306.2725, 299.0],
    '去年总量': [155043.9436, 144590.954, 146504.1668, 146701.7348, 147721.392, 147721.212, 147721.392],
    '农村吸烟率': [0.3571, 0.3571, 0.3571, 0.3571, 0.3571, 0.3571, 0.3571],
    '城镇吸烟率': [0.3289, 0.3289, 0.3289, 0.3289, 0.3289, 0.3289, 0.3289],
    '总量': [144590.954, 147005.36, 146504.1668, 146701.7348, 147721.392, 147721.212, 148000.0]
}

df = pd.DataFrame(data)

# 准备训练数据和测试数据
train_data = df[df['年份'] < 2021]
test_data = df[df['年份'] == 2021]

# 确定自变量（特征）和因变量（要预测的值）
features = ['年份', '常住人口 (万人)', '城镇化率%', '城镇人口', '乡村人口', '去年总量', '农村吸烟率', '城镇吸烟率']
target = '总量'

X_train = train_data[features]
y_train = train_data[target]
X_test = test_data[features]

# 训练多元线性回归模型
model = LinearRegression()
model.fit(X_train, y_train)

# 预测2021年的总量
predicted_total_2021 = model.predict(X_test)
print("预测的2021年总量:", predicted_total_2021[0])
